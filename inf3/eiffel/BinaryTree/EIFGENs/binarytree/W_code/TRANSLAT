binarytree	NODE	value	F861_6968	C1\no861.c
binarytree	NODE	left	F861_6969	C1\no861.c
binarytree	NODE	right	F861_6970	C1\no861.c
binarytree	NODE	parent	F861_6971	C1\no861.c
binarytree	NODE	make	F861_6972	C1\no861.c
binarytree	NODE	getleft	F861_6973	C1\no861.c
binarytree	NODE	setleft	F861_6974	C1\no861.c
binarytree	NODE	getright	F861_6975	C1\no861.c
binarytree	NODE	setright	F861_6976	C1\no861.c
binarytree	NODE	getparent	F861_6977	C1\no861.c
binarytree	NODE	setparent	F861_6978	C1\no861.c
binarytree	NODE	getvalue	F861_6979	C1\no861.c
binarytree	NODE	setvalue	F861_6980	C1\no861.c
binarytree	TREES	node	F862_6981	C1\tr862.c
binarytree	TREES	make	F862_6982	C1\tr862.c
binarytree	TREES	haselement	F862_6983	C1\tr862.c
binarytree	TREES	haselementfunctionrekursiv	F862_6984	C1\tr862.c
binarytree	TREES	add	F862_6985	C1\tr862.c
binarytree	TREES	addfunctionrekursiv	F862_6986	C1\tr862.c
binarytree	TREES	remove	F862_6987	C1\tr862.c
binarytree	TREES	removefunctionrekursiv	F862_6988	C1\tr862.c
binarytree	APPLICATION	test	F863_6989	C1\ap863.c
binarytree	APPLICATION	tree	F863_6990	C1\ap863.c
binarytree	APPLICATION	res	F863_6991	C1\ap863.c
binarytree	APPLICATION	res2	F863_6992	C1\ap863.c
binarytree	APPLICATION	make	F863_6993	C1\ap863.c
